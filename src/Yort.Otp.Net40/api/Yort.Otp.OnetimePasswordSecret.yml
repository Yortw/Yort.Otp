### YamlMime:ManagedReference
items:
- uid: Yort.Otp.OnetimePasswordSecret
  commentId: T:Yort.Otp.OnetimePasswordSecret
  id: OnetimePasswordSecret
  parent: Yort.Otp
  children:
  - Yort.Otp.OnetimePasswordSecret.FromAscii(System.String)
  - Yort.Otp.OnetimePasswordSecret.FromAscii(System.String)
  - Yort.Otp.OnetimePasswordSecret.FromBase32(System.String)
  - Yort.Otp.OnetimePasswordSecret.FromBase32(System.String)
  - Yort.Otp.OnetimePasswordSecret.FromHex(System.String)
  - Yort.Otp.OnetimePasswordSecret.FromHex(System.String)
  - Yort.Otp.OnetimePasswordSecret.ToBase32(System.Byte[])
  langs:
  - csharp
  - vb
  name: OnetimePasswordSecret
  nameWithType: OnetimePasswordSecret
  fullName: Yort.Otp.OnetimePasswordSecret
  type: Class
  source:
    id: OnetimePasswordSecret
    path: ''
    startLine: 2111
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nA static class containing utility methods useful for converting onetime password secrets to and from various formats.\n"
  example: []
  syntax:
    content: public static class OnetimePasswordSecret
    content.vb: Public Module OnetimePasswordSecret
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Yort.Otp.OnetimePasswordSecret.FromHex(System.String)
  commentId: M:Yort.Otp.OnetimePasswordSecret.FromHex(System.String)
  id: FromHex(System.String)
  parent: Yort.Otp.OnetimePasswordSecret
  langs:
  - csharp
  - vb
  name: FromHex(String)
  nameWithType: OnetimePasswordSecret.FromHex(String)
  fullName: Yort.Otp.OnetimePasswordSecret.FromHex(System.String)
  type: Method
  source:
    id: FromHex
    path: ''
    startLine: 715
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nConverts a string containing hexadecimal characters to a byte array suitable for use as a onetime password secret.\n"
  example: []
  syntax:
    content: public static byte[] FromHex(string hex)
    parameters:
    - id: hex
      type: System.String
      description: A string containing hexadecimal characters to convert to a secret.
    return:
      type: System.Byte[]
      description: A byte array that is the secret to use.
    content.vb: Public Shared Function FromHex(hex As String) As Byte()
  overload: Yort.Otp.OnetimePasswordSecret.FromHex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.Otp.OnetimePasswordSecret.FromBase32(System.String)
  commentId: M:Yort.Otp.OnetimePasswordSecret.FromBase32(System.String)
  id: FromBase32(System.String)
  parent: Yort.Otp.OnetimePasswordSecret
  langs:
  - csharp
  - vb
  name: FromBase32(String)
  nameWithType: OnetimePasswordSecret.FromBase32(String)
  fullName: Yort.Otp.OnetimePasswordSecret.FromBase32(System.String)
  type: Method
  source:
    id: FromBase32
    path: ''
    startLine: 726
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nConverts a string containing base 32 characters to a byte array suitable for use as a onetime password secret.\n"
  example: []
  syntax:
    content: public static byte[] FromBase32(string base32)
    parameters:
    - id: base32
      type: System.String
      description: A string containing base 32 characters to convert to a secret.
    return:
      type: System.Byte[]
      description: A byte array that is the secret to use.
    content.vb: Public Shared Function FromBase32(base32 As String) As Byte()
  overload: Yort.Otp.OnetimePasswordSecret.FromBase32*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.Otp.OnetimePasswordSecret.FromAscii(System.String)
  commentId: M:Yort.Otp.OnetimePasswordSecret.FromAscii(System.String)
  id: FromAscii(System.String)
  parent: Yort.Otp.OnetimePasswordSecret
  langs:
  - csharp
  - vb
  name: FromAscii(String)
  nameWithType: OnetimePasswordSecret.FromAscii(String)
  fullName: Yort.Otp.OnetimePasswordSecret.FromAscii(System.String)
  type: Method
  source:
    id: FromAscii
    path: ''
    startLine: 748
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nConverts a string containing ASCII characters to a byte array suitable for use as a onetime password secret.\n"
  example: []
  syntax:
    content: public static byte[] FromAscii(string text)
    parameters:
    - id: text
      type: System.String
      description: A string containing ASCII characters to convert to a secret.
    return:
      type: System.Byte[]
      description: A byte array that is the secret to use.
    content.vb: Public Shared Function FromAscii(text As String) As Byte()
  overload: Yort.Otp.OnetimePasswordSecret.FromAscii*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.Otp.OnetimePasswordSecret.FromHex(System.String)
  commentId: M:Yort.Otp.OnetimePasswordSecret.FromHex(System.String)
  id: FromHex(System.String)
  parent: Yort.Otp.OnetimePasswordSecret
  langs:
  - csharp
  - vb
  name: FromHex(String)
  nameWithType: OnetimePasswordSecret.FromHex(String)
  fullName: Yort.Otp.OnetimePasswordSecret.FromHex(System.String)
  type: Method
  source:
    id: FromHex
    path: ''
    startLine: 2119
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nConverts a string containing hexadecimal characters to a byte array suitable for use as a onetime password secret.\n"
  example: []
  syntax:
    content: public static byte[] FromHex(string hex)
    parameters:
    - id: hex
      type: System.String
      description: A string containing hexadecimal characters to convert to a secret.
    return:
      type: System.Byte[]
      description: A byte array that is the secret to use.
    content.vb: Public Shared Function FromHex(hex As String) As Byte()
  overload: Yort.Otp.OnetimePasswordSecret.FromHex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.Otp.OnetimePasswordSecret.FromBase32(System.String)
  commentId: M:Yort.Otp.OnetimePasswordSecret.FromBase32(System.String)
  id: FromBase32(System.String)
  parent: Yort.Otp.OnetimePasswordSecret
  langs:
  - csharp
  - vb
  name: FromBase32(String)
  nameWithType: OnetimePasswordSecret.FromBase32(String)
  fullName: Yort.Otp.OnetimePasswordSecret.FromBase32(System.String)
  type: Method
  source:
    id: FromBase32
    path: ''
    startLine: 2135
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nConverts a string containing base 32 characters to a byte array suitable for use as a onetime password secret.\n"
  example: []
  syntax:
    content: public static byte[] FromBase32(string base32)
    parameters:
    - id: base32
      type: System.String
      description: A string containing base 32 characters to convert to a secret.
    return:
      type: System.Byte[]
      description: A byte array that is the secret to use.
    content.vb: Public Shared Function FromBase32(base32 As String) As Byte()
  overload: Yort.Otp.OnetimePasswordSecret.FromBase32*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Yort.Otp.OnetimePasswordSecret.ToBase32(System.Byte[])
  commentId: M:Yort.Otp.OnetimePasswordSecret.ToBase32(System.Byte[])
  id: ToBase32(System.Byte[])
  parent: Yort.Otp.OnetimePasswordSecret
  langs:
  - csharp
  - vb
  name: ToBase32(Byte[])
  nameWithType: OnetimePasswordSecret.ToBase32(Byte[])
  fullName: Yort.Otp.OnetimePasswordSecret.ToBase32(System.Byte[])
  type: Method
  source:
    id: ToBase32
    path: ''
    startLine: 2165
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nConverts a raw secret (in byte array form) to a base 32 string.\n"
  example: []
  syntax:
    content: public static string ToBase32(byte[] secret)
    parameters:
    - id: secret
      type: System.Byte[]
      description: A byte array containing the secret to convert.
    return:
      type: System.String
      description: A string containing the base 32 encoded version of the secret.
    content.vb: Public Shared Function ToBase32(secret As Byte()) As String
  overload: Yort.Otp.OnetimePasswordSecret.ToBase32*
  nameWithType.vb: OnetimePasswordSecret.ToBase32(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Yort.Otp.OnetimePasswordSecret.ToBase32(System.Byte())
  name.vb: ToBase32(Byte())
- uid: Yort.Otp.OnetimePasswordSecret.FromAscii(System.String)
  commentId: M:Yort.Otp.OnetimePasswordSecret.FromAscii(System.String)
  id: FromAscii(System.String)
  parent: Yort.Otp.OnetimePasswordSecret
  langs:
  - csharp
  - vb
  name: FromAscii(String)
  nameWithType: OnetimePasswordSecret.FromAscii(String)
  fullName: Yort.Otp.OnetimePasswordSecret.FromAscii(System.String)
  type: Method
  source:
    id: FromAscii
    path: ''
    startLine: 2195
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nConverts a string containing ASCII characters to a byte array suitable for use as a onetime password secret.\n"
  example: []
  syntax:
    content: public static byte[] FromAscii(string text)
    parameters:
    - id: text
      type: System.String
      description: A string containing ASCII characters to convert to a secret.
    return:
      type: System.Byte[]
      description: A byte array that is the secret to use.
    content.vb: Public Shared Function FromAscii(text As String) As Byte()
  overload: Yort.Otp.OnetimePasswordSecret.FromAscii*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Yort.Otp
  commentId: N:Yort.Otp
  isExternal: false
  name: Yort.Otp
  nameWithType: Yort.Otp
  fullName: Yort.Otp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Otp.OnetimePasswordSecret.FromHex*
  commentId: Overload:Yort.Otp.OnetimePasswordSecret.FromHex
  isExternal: false
  name: FromHex
  nameWithType: OnetimePasswordSecret.FromHex
  fullName: Yort.Otp.OnetimePasswordSecret.FromHex
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Yort.Otp.OnetimePasswordSecret.FromBase32*
  commentId: Overload:Yort.Otp.OnetimePasswordSecret.FromBase32
  isExternal: false
  name: FromBase32
  nameWithType: OnetimePasswordSecret.FromBase32
  fullName: Yort.Otp.OnetimePasswordSecret.FromBase32
- uid: Yort.Otp.OnetimePasswordSecret.FromAscii*
  commentId: Overload:Yort.Otp.OnetimePasswordSecret.FromAscii
  isExternal: false
  name: FromAscii
  nameWithType: OnetimePasswordSecret.FromAscii
  fullName: Yort.Otp.OnetimePasswordSecret.FromAscii
- uid: Yort.Otp.OnetimePasswordSecret.ToBase32*
  commentId: Overload:Yort.Otp.OnetimePasswordSecret.ToBase32
  isExternal: false
  name: ToBase32
  nameWithType: OnetimePasswordSecret.ToBase32
  fullName: Yort.Otp.OnetimePasswordSecret.ToBase32
