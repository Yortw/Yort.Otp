### YamlMime:ManagedReference
items:
- uid: Yort.Otp.IOnetimePasswordGenerator
  commentId: T:Yort.Otp.IOnetimePasswordGenerator
  id: IOnetimePasswordGenerator
  parent: Yort.Otp
  children:
  - Yort.Otp.IOnetimePasswordGenerator.GeneratedPassword
  - Yort.Otp.IOnetimePasswordGenerator.HashAlgorithm
  - Yort.Otp.IOnetimePasswordGenerator.PasswordLength
  - Yort.Otp.IOnetimePasswordGenerator.SetSecret(System.Byte[])
  langs:
  - csharp
  - vb
  name: IOnetimePasswordGenerator
  nameWithType: IOnetimePasswordGenerator
  fullName: Yort.Otp.IOnetimePasswordGenerator
  type: Interface
  source:
    id: IOnetimePasswordGenerator
    path: ''
    startLine: 1059
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nCommon interface for classes that can generate second authentication factor passwords.\n"
  example: []
  syntax:
    content: 'public interface IOnetimePasswordGenerator : IDisposable'
    content.vb: >-
      Public Interface IOnetimePasswordGenerator
          Inherits IDisposable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Yort.Otp.IOnetimePasswordGenerator.GeneratedPassword
  commentId: P:Yort.Otp.IOnetimePasswordGenerator.GeneratedPassword
  id: GeneratedPassword
  parent: Yort.Otp.IOnetimePasswordGenerator
  langs:
  - csharp
  - vb
  name: GeneratedPassword
  nameWithType: IOnetimePasswordGenerator.GeneratedPassword
  fullName: Yort.Otp.IOnetimePasswordGenerator.GeneratedPassword
  type: Property
  source:
    id: GeneratedPassword
    path: ''
    startLine: 1064
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nReturns a string containing the current password.\n"
  example: []
  syntax:
    content: string GeneratedPassword { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property GeneratedPassword As String
  overload: Yort.Otp.IOnetimePasswordGenerator.GeneratedPassword*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Yort.Otp.IOnetimePasswordGenerator.HashAlgorithm
  commentId: P:Yort.Otp.IOnetimePasswordGenerator.HashAlgorithm
  id: HashAlgorithm
  parent: Yort.Otp.IOnetimePasswordGenerator
  langs:
  - csharp
  - vb
  name: HashAlgorithm
  nameWithType: IOnetimePasswordGenerator.HashAlgorithm
  fullName: Yort.Otp.IOnetimePasswordGenerator.HashAlgorithm
  type: Property
  source:
    id: HashAlgorithm
    path: ''
    startLine: 1075
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nSets or returns the hash algorithm used with the secret to generate passwords.\n"
  example: []
  syntax:
    content: IHashAlgorithm HashAlgorithm { get; set; }
    parameters: []
    return:
      type: Yort.Otp.IHashAlgorithm
    content.vb: Property HashAlgorithm As IHashAlgorithm
  overload: Yort.Otp.IOnetimePasswordGenerator.HashAlgorithm*
  seealso:
  - linkId: Yort.Otp.Sha1HashAlgorithm
    commentId: T:Yort.Otp.Sha1HashAlgorithm
  - linkId: Yort.Otp.Sha256HashAlgorithm
    commentId: T:Yort.Otp.Sha256HashAlgorithm
  - linkId: Yort.Otp.Sha512HashAlgorithm
    commentId: T:Yort.Otp.Sha512HashAlgorithm
  - linkId: Yort.Otp.MD5HashAlgorithm
    commentId: T:Yort.Otp.MD5HashAlgorithm
  modifiers.csharp:
  - get
  - set
- uid: Yort.Otp.IOnetimePasswordGenerator.PasswordLength
  commentId: P:Yort.Otp.IOnetimePasswordGenerator.PasswordLength
  id: PasswordLength
  parent: Yort.Otp.IOnetimePasswordGenerator
  langs:
  - csharp
  - vb
  name: PasswordLength
  nameWithType: IOnetimePasswordGenerator.PasswordLength
  fullName: Yort.Otp.IOnetimePasswordGenerator.PasswordLength
  type: Property
  source:
    id: PasswordLength
    path: ''
    startLine: 1082
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nSets or returns then length of password to generate. Default value is 6, usual values are 6 or 8.\n"
  example: []
  syntax:
    content: int PasswordLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property PasswordLength As Integer
  overload: Yort.Otp.IOnetimePasswordGenerator.PasswordLength*
  modifiers.csharp:
  - get
  - set
- uid: Yort.Otp.IOnetimePasswordGenerator.SetSecret(System.Byte[])
  commentId: M:Yort.Otp.IOnetimePasswordGenerator.SetSecret(System.Byte[])
  id: SetSecret(System.Byte[])
  parent: Yort.Otp.IOnetimePasswordGenerator
  langs:
  - csharp
  - vb
  name: SetSecret(Byte[])
  nameWithType: IOnetimePasswordGenerator.SetSecret(Byte[])
  fullName: Yort.Otp.IOnetimePasswordGenerator.SetSecret(System.Byte[])
  type: Method
  source:
    id: SetSecret
    path: ''
    startLine: 1088
  assemblies:
  - cs.temp.dll
  namespace: Yort.Otp
  summary: "\nSets the secret value used to generate passwords.\n"
  example: []
  syntax:
    content: void SetSecret(byte[] secret)
    parameters:
    - id: secret
      type: System.Byte[]
      description: A byte array containing the secret value used to generate passwords.
    content.vb: Sub SetSecret(secret As Byte())
  overload: Yort.Otp.IOnetimePasswordGenerator.SetSecret*
  nameWithType.vb: IOnetimePasswordGenerator.SetSecret(Byte())
  fullName.vb: Yort.Otp.IOnetimePasswordGenerator.SetSecret(System.Byte())
  name.vb: SetSecret(Byte())
references:
- uid: Yort.Otp
  commentId: N:Yort.Otp
  isExternal: false
  name: Yort.Otp
  nameWithType: Yort.Otp
  fullName: Yort.Otp
- uid: Yort.Otp.IOnetimePasswordGenerator.GeneratedPassword*
  commentId: Overload:Yort.Otp.IOnetimePasswordGenerator.GeneratedPassword
  isExternal: false
  name: GeneratedPassword
  nameWithType: IOnetimePasswordGenerator.GeneratedPassword
  fullName: Yort.Otp.IOnetimePasswordGenerator.GeneratedPassword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Otp.Sha1HashAlgorithm
  commentId: T:Yort.Otp.Sha1HashAlgorithm
  isExternal: false
  name: Sha1HashAlgorithm
  nameWithType: Sha1HashAlgorithm
  fullName: Yort.Otp.Sha1HashAlgorithm
- uid: Yort.Otp.Sha256HashAlgorithm
  commentId: T:Yort.Otp.Sha256HashAlgorithm
  isExternal: false
  name: Sha256HashAlgorithm
  nameWithType: Sha256HashAlgorithm
  fullName: Yort.Otp.Sha256HashAlgorithm
- uid: Yort.Otp.Sha512HashAlgorithm
  commentId: T:Yort.Otp.Sha512HashAlgorithm
  isExternal: false
  name: Sha512HashAlgorithm
  nameWithType: Sha512HashAlgorithm
  fullName: Yort.Otp.Sha512HashAlgorithm
- uid: Yort.Otp.MD5HashAlgorithm
  commentId: T:Yort.Otp.MD5HashAlgorithm
  isExternal: false
  name: MD5HashAlgorithm
  nameWithType: MD5HashAlgorithm
  fullName: Yort.Otp.MD5HashAlgorithm
- uid: Yort.Otp.IOnetimePasswordGenerator.HashAlgorithm*
  commentId: Overload:Yort.Otp.IOnetimePasswordGenerator.HashAlgorithm
  isExternal: false
  name: HashAlgorithm
  nameWithType: IOnetimePasswordGenerator.HashAlgorithm
  fullName: Yort.Otp.IOnetimePasswordGenerator.HashAlgorithm
- uid: Yort.Otp.IHashAlgorithm
  commentId: T:Yort.Otp.IHashAlgorithm
  parent: Yort.Otp
  isExternal: false
  name: IHashAlgorithm
  nameWithType: IHashAlgorithm
  fullName: Yort.Otp.IHashAlgorithm
- uid: Yort.Otp.IOnetimePasswordGenerator.PasswordLength*
  commentId: Overload:Yort.Otp.IOnetimePasswordGenerator.PasswordLength
  isExternal: false
  name: PasswordLength
  nameWithType: IOnetimePasswordGenerator.PasswordLength
  fullName: Yort.Otp.IOnetimePasswordGenerator.PasswordLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Yort.Otp.IOnetimePasswordGenerator.SetSecret*
  commentId: Overload:Yort.Otp.IOnetimePasswordGenerator.SetSecret
  isExternal: false
  name: SetSecret
  nameWithType: IOnetimePasswordGenerator.SetSecret
  fullName: Yort.Otp.IOnetimePasswordGenerator.SetSecret
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
